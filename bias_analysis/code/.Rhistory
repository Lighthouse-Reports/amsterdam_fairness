mutate(order = case_when(stage == 'Prepilot/BR' ~ 1,
stage == 'Prepilot/AR' ~ 2,
.default = NA))
for(characteristic in unique(cms_city_perspective$Feature_EN)){
cms_char <- cms_city_perspective %>%
filter(Feature_EN == characteristic)
p1 <- ggplot(cms_char, aes(x = reorder(Model_EN, order), y = Value, fill = Feature_Value_EN))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
title = paste0(characteristic, ': Development of Fairness Metrics from the Citys Perspective'),
fill = characteristic)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p1)
ggsave(paste0('../output/rq1_p1_', characteristic, '.png'), plot = p1, width = 10, height = 8)
feature_vals <- unique(cms_char$Feature_Value_EN)
cms_char_diff <- cms_char %>%
dplyr::select(-Feature_Value, -group_size) %>%
pivot_wider(names_from = 'Feature_Value_EN', values_from = 'Value') %>%
#using Amsterdam's difference op here, though not sure the ref cat is always the same
mutate(Diff = .data[[feature_vals[2]]] /  .data[[feature_vals[1]]])
#TODO: add difference as operationalized by the city reports
p2 <- ggplot(cms_char_diff, aes(x = reorder(Model_EN, -order), y = Diff))+
geom_bar(stat = 'identity', position = position_dodge(), fill = 'blue') +
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
y = 'Group % difference',
title = paste0(characteristic, ': Development of Fairness \nMetrics from the Citys Perspective'),
subtitle = paste0(feature_vals[2], ' - ', feature_vals[1]))+
coord_flip()
print(p2)
ggsave(paste0('../output/rq1_p2_', characteristic, '.png'), plot = p2, width = 10, height = 8)
}
cms_city_perspective <- cms_long %>%
filter(stage %in% c('Prepilot/BR', 'Prepilot/AR'),
Metric %in% c('STAT_PAR', 'FDR', 'FP'),
Feature_EN %in% c('gender', 'Age < 30', 'Age < 50', 'Dutch', 'IsFulltimeParent')) %>%
mutate(order = case_when(stage == 'Prepilot/BR' ~ 1,
stage == 'Prepilot/AR' ~ 2,
.default = NA))
for(characteristic in unique(cms_city_perspective$Feature_EN)){
cms_char <- cms_city_perspective %>%
filter(Feature_EN == characteristic)
p1 <- ggplot(cms_char, aes(x = reorder(Model_EN, order), y = Value, fill = Feature_Value_EN))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
title = paste0(characteristic, ': Development of Fairness Metrics from the Citys Perspective'),
fill = characteristic)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p1)
ggsave(paste0('../output/rq1_p1_', characteristic, '.png'), plot = p1, width = 10, height = 8)
feature_vals <- unique(cms_char$Feature_Value_EN)
cms_char_diff <- cms_char %>%
dplyr::select(-Feature_Value, -group_size) %>%
pivot_wider(names_from = 'Feature_Value_EN', values_from = 'Value') %>%
#using Amsterdam's difference op here, though not sure the ref cat is always the same
mutate(Diff = .data[[feature_vals[2]]] -  .data[[feature_vals[1]]])
#TODO: add difference as operationalized by the city reports
p2 <- ggplot(cms_char_diff, aes(x = reorder(Model_EN, -order), y = Diff))+
geom_bar(stat = 'identity', position = position_dodge(), fill = 'blue') +
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
y = 'Group % difference',
title = paste0(characteristic, ': Development of Fairness \nMetrics from the Citys Perspective'),
subtitle = paste0(feature_vals[2], ' - ', feature_vals[1]))+
coord_flip()
print(p2)
ggsave(paste0('../output/rq1_p2_', characteristic, '.png'), plot = p2, width = 10, height = 8)
}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(stringr)
library(friendlyeval)
cms_raw <- read.xlsx('../input/Results_LHR/Output/20240308_CMs_LHR_SlimmeCheck.xlsx')
feature_counts_raw <- read.xlsx('../input/Results_LHR/Output/20240308_Important_Features_Counts.xlsx')
### Confusion Matrices ###
summary(cms_raw)
print(unique(cms_raw$Dataset))
print(unique(cms_raw$Model))
print(unique(cms_raw$Feature))
cms_raw <- cms_raw %>%
#0s indicate small sample sizes but are unlikely to be correct
mutate(Value = ifelse(Value == 0, NA, Value))
#combine train and test since the original split is not actually recreated
#TODO: current approach results in NAs if either Train or Test is NA/0,
#I could just go with using data from the split that is sufficiently large in those cases
cms_train <- cms_raw %>%
filter(Dataset == 'TrainingTrain') %>%
rename(Value_Train = Value) %>%
dplyr::select(-Dataset)
cms_test <- cms_raw %>%
filter(Dataset == 'TrainingTest') %>%
rename(Value_Test = Value) %>%
dplyr::select(-Dataset)
cms_train_test <- cms_train %>%
left_join(cms_test, by = c('Model', 'Feature', 'Feature_Value', 'Metric')) %>%
mutate(Value = Value_Train + Value_Test,
Dataset = 'TrainTest') %>%
dplyr::select(-Value_Train, -Value_Test)
cms_wide <- cms_raw %>%
filter(!(Dataset %in% c('TrainingTrain', 'TrainingTest'))) %>%
bind_rows(cms_train_test) %>%
group_by(Feature, Feature_Value, Dataset, Model) %>%
mutate(Share = (Value/sum(Value)) * 100,
group_size = sum(Value)) %>%
ungroup() %>%
dplyr::select(-Value) %>%
pivot_wider(names_from = Metric, values_from = Share) %>%
mutate(TOTAL = TN+FP+TP+FN,
ACT_N = FP + TN,
ACT_P = FN + TP,
PRED_P = FP + TP,
PRED_N = FN + TN,
FPR = (FP/ACT_N) * 100,
PPV = (TP/PRED_P) * 100,
FDR = (FP/PRED_P) * 100,
TPR = (TP/ACT_P) * 100,
STAT_PAR = PRED_P,
ERROR = FP+FN) %>%
mutate(Feature_EN = case_when(Feature == 'geslacht' ~ 'gender',
Feature == 'Leeftijd&lt;30' ~ 'Age < 30',
Feature == 'Leeftijd&lt;40' ~ 'Age < 40',
Feature == 'Leeftijd&lt;50' ~ 'Age < 50',
Feature == 'IsNederlands' ~ 'Dutch',
Feature == 'IsWesters' ~ 'Western',
.default = Feature),
Feature_Value_EN = case_when(Feature_Value == 'V' ~ 'F',
Feature == 'Leeftijd&lt;30' & Feature_Value == 1 ~ 'below 30',
Feature == 'Leeftijd&lt;30' & Feature_Value == 0 ~ 'above 30',
Feature == 'Leeftijd&lt;40' & Feature_Value == 1 ~ 'below 40',
Feature == 'Leeftijd&lt;40' & Feature_Value == 0 ~ 'above 40',
Feature == 'Leeftijd&lt;50' & Feature_Value == 1 ~ 'below 50',
Feature == 'Leeftijd&lt;50' & Feature_Value == 0 ~ 'above 50',
Feature == 'IsNederlands' & Feature_Value == 1 ~ 'Dutch',
Feature == 'IsNederlands' & Feature_Value == 0 ~ 'Not Dutch',
Feature == 'IsWesters' & Feature_Value == 1 ~ 'Western',
Feature == 'IsWesters' & Feature_Value == 0 ~ 'Not Western',
Feature == 'IsFulltimeParent' & Feature_Value == 1 ~ 'Full-time parent',
Feature == 'IsFulltimeParent' & Feature_Value == 0 ~ 'Not full-time parent',
Feature == 'IsParttimeParent' & Feature_Value == 1 ~ 'Part-time parent',
Feature == 'IsParttimeParent' & Feature_Value == 0 ~ 'Not part-time parent',
.default = Feature_Value),
is_privileged_group = case_when(Feature_Value == 'V' ~ 0,
Feature_Value == 'M' ~ 1,
Feature == 'Leeftijd&lt;30' & Feature_Value == 1 ~ 1,
Feature == 'Leeftijd&lt;30' & Feature_Value == 0 ~ 0,
Feature == 'Leeftijd&lt;40' & Feature_Value == 1 ~ 1,
Feature == 'Leeftijd&lt;40' & Feature_Value == 0 ~ 0,
Feature == 'Leeftijd&lt;50' & Feature_Value == 1 ~ 1,
Feature == 'Leeftijd&lt;50' & Feature_Value == 0 ~ 0,
Feature == 'IsNederlands' & Feature_Value == 1 ~ 1,
Feature == 'IsNederlands' & Feature_Value == 0 ~ 0,
Feature == 'IsWesters' & Feature_Value == 1 ~ 1,
Feature == 'IsWesters' & Feature_Value == 0 ~ 0,
Feature == 'IsFulltimeParent' & Feature_Value == 1 ~ 0,
Feature == 'IsFulltimeParent' & Feature_Value == 0 ~ 1,
Feature == 'IsParttimeParent' & Feature_Value == 1 ~ 0,
Feature == 'IsParttimeParent' & Feature_Value == 0 ~ 1,
.default = NA),
stage = paste0(Dataset, '/', Model),
Model_EN = case_when(Model == 'BR' ~ 'Before Reweighing',
Model == 'AR' ~ 'After Reweighing'))
write.csv(cms_wide, '../output/cms_wide.csv')
cms_long <- cms_wide %>%
pivot_longer(cols = c("TN", "FP", "FN", "TP", "TOTAL", "ACT_N", "ACT_P", "PRED_P", "PRED_N", "FPR", "PPV", "FDR", "STAT_PAR", "TPR", "ERROR"),
names_to = 'Metric', values_to = 'Value')
write.csv(cms_long, '../output/cms_long.csv')
cms_amsti <- cms_wide %>%
dplyr::select('Dataset', 'Model', 'Model_EN', 'Feature_EN', 'is_privileged_group', 'Feature_Value_EN', 'group_size', 'FP', 'FPR', 'FDR', 'PRED_P') %>%
mutate(is_privileged_group = ifelse(is_privileged_group ==1, 'privileged', 'unprivileged')) %>%
pivot_wider(names_from = 'is_privileged_group', values_from =  c('Feature_Value_EN', 'group_size', 'FP', 'FPR', 'FDR', 'PRED_P')) %>%
mutate(FP_amsti_diff = 100*((FP_unprivileged-FP_privileged)/FP_privileged),
FPR_amsti_diff = 100*((FPR_unprivileged-FPR_privileged)/FPR_privileged),
FDR_amsti_diff = 100*((FDR_unprivileged-FPR_privileged)/FDR_privileged),
PRED_P_amsti_diff = 100*((PRED_P_unprivileged-PRED_P_privileged)/PRED_P_privileged))
write.csv(cms_amsti, '../output/cms_amsti.csv')
View(cms_amsti)
View(cms_long)
View(cms_test)
View(cms_test)
View(cms_train)
View(cms_train_test)
View(cms_wide)
### Feature Importance ###
feature_counts <- feature_counts_raw %>%
mutate(Count = ifelse(Count == 0, NA, Count),
Feature_EN = case_when(Feature == 'geslacht' ~ 'gender',
Feature == 'Leeftijd&lt;30' ~ 'Age < 30',
Feature == 'Leeftijd&lt;40' ~ 'Age < 40',
Feature == 'Leeftijd&lt;50' ~ 'Age < 50',
Feature == 'IsNederlands' ~ 'Dutch',
Feature == 'IsWesters' ~ 'Western',
.default = Feature),
Feature_Value_EN = case_when(Feature == 'geslacht' & Value == 1 ~ 'F', #not sure about gender here
Feature == 'geslacht' & Value == 0 ~ 'M',
Feature == 'Leeftijd&lt;30' & Value == 1 ~ 'below 30',
Feature == 'Leeftijd&lt;30' & Value == 0 ~ 'above 30',
Feature == 'Leeftijd&lt;40' & Value == 1 ~ 'below 40',
Feature == 'Leeftijd&lt;40' & Value == 0 ~ 'above 40',
Feature == 'Leeftijd&lt;50' & Value == 1 ~ 'below 50',
Feature == 'Leeftijd&lt;50' & Value == 0 ~ 'above 50',
Feature == 'IsNederlands' & Value == 1 ~ 'Dutch',
Feature == 'IsNederlands' & Value == 0 ~ 'Not Dutch',
Feature == 'IsWesters' & Value == 1 ~ 'Western',
Feature == 'IsWesters' & Value == 0 ~ 'Not Western',
Feature == 'IsFulltimeParent' & Value == 1 ~ 'Full-time parent',
Feature == 'IsFulltimeParent' & Value == 0 ~ 'Not full-time parent',
Feature == 'IsParttimeParent' & Value == 1 ~ 'Part-time parent',
Feature == 'IsParttimeParent' & Value == 0 ~ 'Not part-time parent',
.default = as.character(Value))) %>%
group_by(Feature_EN, Feature_Value_EN, dataset) %>%
mutate(share = (Count/sum(Count, na.rm = T)) * 100) %>% #note that I remove NAs which are presumably not in fact all zeros but could be low values below 10
ungroup()
cms_city_perspective <- cms_long %>%
filter(stage %in% c('Prepilot/BR', 'Prepilot/AR'),
Metric %in% c('STAT_PAR', 'FDR', 'FP'),
Feature_EN %in% c('gender', 'Age < 30', 'Age < 50', 'Dutch', 'IsFulltimeParent', 'Western')) %>%
mutate(order = case_when(stage == 'Prepilot/BR' ~ 1,
stage == 'Prepilot/AR' ~ 2,
.default = NA))
View(cms_city_perspective)
cms_char_diff <- data.frame()
for(characteristic in c('Dutch', 'gender')){
cms_char <- cms_city_perspective %>%
filter(Feature_EN == characteristic)
p1 <- ggplot(cms_char, aes(x = reorder(Model_EN, order), y = Value, fill = Feature_Value_EN))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
title = paste0(characteristic, ': Development of Fairness Metrics from the Citys Perspective'),
fill = characteristic)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p1)
ggsave(paste0('../output/rq1_p1_', characteristic, '.png'), plot = p1, width = 10, height = 8)
feature_val_privileged <- unique(cms_char[cms_char$is_privileged_group == 1,]$Feature_Value_EN)[1]
feature_val_unprivileged <- unique(cms_char[cms_char$is_privileged_group == 0,]$Feature_Value_EN)[1]
cms_char_diff <- cms_char %>%
dplyr::select(-Feature_Value, -group_size, -is_privileged_group) %>%
pivot_wider(names_from = 'Feature_Value_EN', values_from = 'Value') %>%
#using Amsterdam's difference op here, though not sure the ref cat is always the same
mutate(Diff = 100*(.data[[feature_val_unprivileged]] -  .data[[feature_val_privileged]])/.data[[feature_val_privileged]])
#TODO: add difference as operationalized by the city reports
p2 <- ggplot(cms_char_diff, aes(x = reorder(Model_EN, -order), y = Diff))+
geom_bar(stat = 'identity', position = position_dodge(), fill = 'blue') +
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
y = 'Group % difference',
title = paste0(characteristic, ': Development of Fairness \nMetrics from the Citys Perspective'),
subtitle = paste0(feature_val_unprivileged, ' - ', feature_val_privileged))+
coord_flip()
print(p2)
ggsave(paste0('../output/rq1_p2_', characteristic, '.png'), plot = p2, width = 10, height = 8)
write.csv(cms_char_diff, paste0('../output/fairness_definition_cmomp_', characteristic, '.csv'))
}
for(characteristic in c('Dutch', 'gender')){
cms_char <- cms_city_perspective %>%
filter(Feature_EN == characteristic)
p1 <- ggplot(cms_char, aes(x = reorder(Model_EN, order), y = Value, fill = Feature_Value_EN))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
title = paste0(characteristic, ': Development of Fairness Metrics from the Citys Perspective'),
fill = characteristic)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p1)
ggsave(paste0('../output/rq1_p1_', characteristic, '.png'), plot = p1, width = 10, height = 8)
feature_val_privileged <- unique(cms_char[cms_char$is_privileged_group == 1,]$Feature_Value_EN)[1]
feature_val_unprivileged <- unique(cms_char[cms_char$is_privileged_group == 0,]$Feature_Value_EN)[1]
cms_char_diff <- cms_char %>%
dplyr::select(-Feature_Value, -group_size, -is_privileged_group) %>%
pivot_wider(names_from = 'Feature_Value_EN', values_from = 'Value') %>%
#using Amsterdam's difference op here, though not sure the ref cat is always the same
mutate(Diff = 100*(.data[[feature_val_unprivileged]] -  .data[[feature_val_privileged]])/.data[[feature_val_privileged]],
Metric = case_when(Metric == 'FP' ~ 'False Positive Share',
Metric == 'FDR' ~ 'False Discovery Rate',
Metric == 'STAT_PAR' ~ 'Statistical Parity',
.default = NA))
#TODO: add difference as operationalized by the city reports
p2 <- ggplot(cms_char_diff, aes(x = reorder(Model_EN, -order), y = Diff))+
geom_bar(stat = 'identity', position = position_dodge(), fill = 'blue') +
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
y = 'Group % difference',
title = paste0(characteristic, ': Development of Fairness \nMetrics from the Citys Perspective'),
subtitle = paste0(feature_val_unprivileged, ' - ', feature_val_privileged))+
coord_flip()
print(p2)
ggsave(paste0('../output/rq1_p2_', characteristic, '.png'), plot = p2, width = 10, height = 8)
write.csv(cms_char_diff, paste0('../output/fairness_definition_cmomp_', characteristic, '.csv'))
}
for(characteristic in c('Dutch', 'gender', 'IsFulltimeParent')){
cms_char <- cms_city_perspective %>%
filter(Feature_EN == characteristic)
p1 <- ggplot(cms_char, aes(x = reorder(Model_EN, order), y = Value, fill = Feature_Value_EN))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
title = paste0(characteristic, ': Development of Fairness Metrics from the Citys Perspective'),
fill = characteristic)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p1)
ggsave(paste0('../output/rq1_p1_', characteristic, '.png'), plot = p1, width = 10, height = 8)
feature_val_privileged <- unique(cms_char[cms_char$is_privileged_group == 1,]$Feature_Value_EN)[1]
feature_val_unprivileged <- unique(cms_char[cms_char$is_privileged_group == 0,]$Feature_Value_EN)[1]
cms_char_diff <- cms_char %>%
dplyr::select(-Feature_Value, -group_size, -is_privileged_group) %>%
pivot_wider(names_from = 'Feature_Value_EN', values_from = 'Value') %>%
#using Amsterdam's difference op here, though not sure the ref cat is always the same
mutate(Diff = 100*(.data[[feature_val_unprivileged]] -  .data[[feature_val_privileged]])/.data[[feature_val_privileged]],
Metric = case_when(Metric == 'FP' ~ 'False Positive Share',
Metric == 'FDR' ~ 'False Discovery Rate',
Metric == 'STAT_PAR' ~ 'Statistical Parity',
.default = NA))
#TODO: add difference as operationalized by the city reports
p2 <- ggplot(cms_char_diff, aes(x = reorder(Model_EN, -order), y = Diff))+
geom_bar(stat = 'identity', position = position_dodge(), fill = 'blue') +
facet_grid(Metric ~., scales = "free_y")+
labs(x = 'Dataset/Model',
y = 'Group % difference',
title = paste0(characteristic, ': Development of Fairness \nMetrics from the Citys Perspective'),
subtitle = paste0(feature_val_unprivileged, ' - ', feature_val_privileged))+
coord_flip()
print(p2)
ggsave(paste0('../output/rq1_p2_', characteristic, '.png'), plot = p2, width = 10, height = 8)
write.csv(cms_char_diff, paste0('../output/fairness_definition_cmomp_', characteristic, '.csv'))
}
cms_error <- cms_long %>%
filter(stage %in% c('Prepilot/BR', 'Prepilot/AR', 'Pilot/BR', 'Pilot/AR'),
Metric %in% c('FP', 'FN', 'ERROR'),
Feature_EN %in% c('gender', 'Age < 30', 'Age < 50', 'Dutch', 'IsFulltimeParent')) %>%
mutate(order = case_when(stage == 'Prepilot/AR' ~ 1,
stage == 'Pilot/AR' ~ 1,
.default = NA))
cms_error <- cms_long %>%
filter(stage %in% c('Prepilot/BR', 'Prepilot/AR', 'Pilot/BR', 'Pilot/AR'),
Metric %in% c('FP', 'FN', 'ERROR'),
Feature_EN %in% c('gender', 'Age < 30', 'Age < 50', 'Dutch', 'IsFulltimeParent')) %>%
mutate(order = case_when(stage == 'Prepilot/AR' ~ 1,
stage == 'Pilot/AR' ~ 1,
.default = NA))
for(characteristic in c('Dutch')){
cms_char <- cms_error %>%
filter(Feature_EN == characteristic)
p4 <- ggplot(cms_char, aes(x = reorder(stage, order), y = Value, fill = Metric))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_wrap(.~Feature_Value_EN)+
labs(x = 'Dataset/Model', y = '% Error',
title = paste0(characteristic, ': Development of Error rates across model development'),
fill = 'Error Metric')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p4)
ggsave(paste0('../output/rq3_p4_error_', characteristic, '.png'), plot = p4, width = 10, height = 8)
cms_char <- cms_char %>%
mutate(Metric = case_when(Metric == 'FP' ~ 'False Positives',
Metric == 'FN' ~ 'False Negatives',
Metric == 'Error' ~ 'Overall Error Share'))
write.csv(cms_char, paste0('../output/', chracteristic ,'_error_rate.csv'))
}
for(characteristic in c('Dutch')){
cms_char <- cms_error %>%
filter(Feature_EN == characteristic)
p4 <- ggplot(cms_char, aes(x = reorder(stage, order), y = Value, fill = Metric))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_wrap(.~Feature_Value_EN)+
labs(x = 'Dataset/Model', y = '% Error',
title = paste0(characteristic, ': Development of Error rates across model development'),
fill = 'Error Metric')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p4)
ggsave(paste0('../output/rq3_p4_error_', characteristic, '.png'), plot = p4, width = 10, height = 8)
cms_char <- cms_char %>%
mutate(Metric = case_when(Metric == 'FP' ~ 'False Positives',
Metric == 'FN' ~ 'False Negatives',
Metric == 'Error' ~ 'Overall Error Share'))
write.csv(cms_char, paste0('../output/', characteristic ,'_error_rate.csv'))
}
cms_error <- cms_long %>%
filter(stage %in% c( 'Prepilot/AR', 'Pilot/AR'),
Metric %in% c('FP', 'FN', 'ERROR'),
Feature_EN %in% c('gender', 'Age < 30', 'Age < 50', 'Dutch', 'IsFulltimeParent')) %>%
mutate(order = case_when(stage == 'Prepilot/AR' ~ 1,
stage == 'Pilot/AR' ~ 1,
.default = NA))
for(characteristic in c('Dutch')){
cms_char <- cms_error %>%
filter(Feature_EN == characteristic)
p4 <- ggplot(cms_char, aes(x = reorder(stage, order), y = Value, fill = Metric))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_wrap(.~Feature_Value_EN)+
labs(x = 'Dataset/Model', y = '% Error',
title = paste0(characteristic, ': Development of Error rates across model development'),
fill = 'Error Metric')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p4)
ggsave(paste0('../output/rq3_p4_error_', characteristic, '.png'), plot = p4, width = 10, height = 8)
cms_char <- cms_char %>%
mutate(Metric = case_when(Metric == 'FP' ~ 'False Positives',
Metric == 'FN' ~ 'False Negatives',
Metric == 'Error' ~ 'Overall Error Share'))
write.csv(cms_char, paste0('../output/', characteristic ,'_error_rate.csv'))
}
cms_error <- cms_long %>%
filter(stage %in% c( 'Prepilot/AR', 'Pilot/AR'),
Metric %in% c('FP', 'FN', 'ERROR'),
Feature_EN %in% c('gender', 'Age < 30', 'Age < 50', 'Dutch', 'IsFulltimeParent')) %>%
mutate(order = case_when(stage == 'Prepilot/AR' ~ 1,
stage == 'Pilot/AR' ~ 1,
.default = NA))
for(characteristic in c('Dutch')){
cms_char <- cms_error %>%
filter(Feature_EN == characteristic)
p4 <- ggplot(cms_char, aes(x = reorder(stage, order), y = Value, fill = Metric))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_wrap(.~Feature_Value_EN)+
labs(x = 'Dataset/Model', y = '% Error',
title = paste0(characteristic, ': Development of Error rates across model development'),
fill = 'Error Metric')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p4)
ggsave(paste0('../output/rq3_p4_error_', characteristic, '.png'), plot = p4, width = 10, height = 8)
cms_char <- cms_char %>%
mutate(Metric = case_when(Metric == 'FP' ~ 'False Positives',
Metric == 'FN' ~ 'False Negatives',
Metric == 'ERROR' ~ 'Overall Error Share'))
write.csv(cms_char, paste0('../output/', characteristic ,'_error_rate.csv'))
}
cms_error <- cms_long %>%
filter(stage %in% c( 'Prepilot/AR', 'Pilot/AR'),
Metric %in% c('FP', 'FN', 'ERROR'),
Feature_EN %in% c('gender', 'Age < 30', 'Age < 50', 'Dutch', 'IsFulltimeParent')) %>%
mutate(order = case_when(stage == 'Prepilot/AR' ~ 1,
stage == 'Pilot/AR' ~ 1,
.default = NA))
for(characteristic in c('Dutch')){
cms_char <- cms_error %>%
filter(Feature_EN == characteristic)
p4 <- ggplot(cms_char, aes(x = reorder(stage, order), y = Value, fill = Metric))+
geom_bar(stat = 'identity', position = position_dodge())+
facet_wrap(.~Feature_Value_EN)+
labs(x = 'Dataset/Model', y = '% Error',
title = paste0(characteristic, ': Development of Error rates across model development'),
fill = 'Error Metric')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(p4)
ggsave(paste0('../output/rq3_p4_error_', characteristic, '.png'), plot = p4, width = 10, height = 8)
cms_char <- cms_char %>%
mutate(Metric = case_when(Metric == 'FP' ~ 'False Positives',
Metric == 'FN' ~ 'False Negatives',
Metric == 'ERROR' ~ 'Overall Error Rate'))
write.csv(cms_char, paste0('../output/', characteristic ,'_error_rate.csv'))
}
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(dplyr)
library(tidyr)
be_bb <- read.xlsx('../Data/BB Statistik/BE-BB-LUEK-01146.xlsx', sheet = 'BE AuE 2010-2023')
View(be_bb)
ber_AUE <- read.xlsx('../Data/BB Statistik/BE-BB-LUEK-01146.xlsx', sheet = 'BE AuE 2010-2023')
bb_AUE<- read.xlsx('../Data/BB Statistik/BE-BB-LUEK-01146.xlsx', sheet = 'BB AuE 2010-2023')
bb_be_EMPF <- read.xlsx('../Data/BB Statistik/BE-BB-LUEK-01146.xlsx', sheet = 'BB Empf 2010-2023')
# Baden-Württemberg
bw_AUE <- read.xlsx('../Data/BB Statistik/BW-LUEK-01146.xlsx', sheet = 'BW AuE 2010-2023')
bw_EMPF <- read.xlsx('../Data/BB Statistik/BW-LUEK-01146.xlsx', sheet = 'BW Empf 2010-2023')
# Bayern
by_AUE <- read.xlsx('../Data/BB Statistik/BY-Arbeitsgelegenheiten.xlsx', sheet = 'BY AuE 2010-2023')
by_EMPF <- read.xlsx('../Data/BB Statistik/BY-Arbeitsgelegenheiten.xlsx', sheet = 'BY Empf 2010-2023')
hb_EMPF <- read.xlsx('../Data/BB Statistik/HB-LUEK-01146_20250131', sheet = 'BB AuE 2010-2023')
hb_EMPF <- read.xlsx('../Data/BB Statistik/HB-LUEK-01146_20250131.xlsx', sheet = 'BB Empf 2010-2023')
# Hessen
he_AUE <- read.xlsx('../Data/BB Statistik/HE-161024 Justin-Casimir Braun.xlsx', sheet = 'HE AuE 2010-2023')
he_EMPF <- read.xlsx('../Data/BB Statistik/HE-161024 Justin-Casimir Braun.xlsx', sheet = 'HE Empf 2010-2023')
# Niedersachsen
ni_AUE <- read.xlsx('../Data/BB Statistik/NI_LUEK_Asyl_A_Empf_§5_2010_2023.xlsx', sheet = 'NDS AuE 2010-2023')
ni_EMPF <- read.xlsx('../Data/BB Statistik/NI_LUEK_Asyl_A_Empf_§5_2010_2023', sheet = 'NDS Empf 2010-2023 ')
ni_EMPF <- read.xlsx('../Data/BB Statistik/NI_LUEK_Asyl_A_Empf_§5_2010_2023.xlsx', sheet = 'NDS Empf 2010-2023 ')
# Nordrhein-Westphalen
nrw_AUE <- read.xlsx('../Data/BB Statistik/NRW-LUEK-01146_final.xlsx', sheet = 'NRW AuE 2010-2023 ')
nrw_EMPF <- read.xlsx('../Data/BB Statistik/NRW-LUEK-01146_final.xlsx', sheet = 'NRW Empf 2010-2023')
# Rheinland-Pfalz
rp_AUE <- read.xlsx('../Data/BB Statistik/RP-20240212_112-AD24-2117_Braun_Asyl_2010bis2023.xlxs', sheet = 'RP AuE 2010-2023 ')
# Rheinland-Pfalz
rp_AUE <- read.xlsx('../Data/BB Statistik/RP-20240212_112-AD24-2117_Braun_Asyl_2010bis2023.xlxs', sheet = 'RP AuE 2010-2023')
# Rheinland-Pfalz
rp_AUE <- read.xlsx('../Data/BB Statistik/RP-20240212_112-AD24-xlsx', sheet = 'RP AuE 2010-2023')
# Rheinland-Pfalz
rp_AUE <- read.xlsx('../Data/BB Statistik/RP-20240212_112-AD24-2117_Braun_Asyl_2010bis2023.xlsx', sheet = 'RP AuE 2010-2023')
# Rheinland-Pfalz
rp_AUE <- read.xlsx('../Data/BB Statistik/RP-20240212_112-AD24-2117_Braun_Asyl_2010bis2023.xlsx', sheet = 'RP AuE 2010-2023 ')
rp_EMPF <- read.xlsx('../Data/BB Statistik/RP-20240212_112-AD24-2117_Braun_Asyl_2010bis2023.xlsx', sheet = 'RP Empf 2010-2023')
# Saarland
sl_AUE <- read.xlsx('../Data/BB Statistik/SL-2025-Datenlieferung_LUEK-01146.xlsx', sheet = 'SL AuE 2010-2023')
sl_EMPF <- read.xlsx('../Data/BB Statistik/SL-2025-Datenlieferung_LUEK-01146.xlsx', sheet = 'SL Empf 2010-2023')
# Sachsen
sn_EMPF <- read.xlsx('../Data/BB Statistik/SN-LUEK-01146_§5AsylbLG_ZR_TP_SN_g.xlsx')
st_EMPF <- read.xlsx('../Data/BB Statistik/ST-2025_0104_2024_1531 Asylbewerberleistungen § 5 Empfänger Ausgaben ZTR .xlsx', sheet = 'ST Empf 2010-2023 GH')
# Sachsen-Anhalt
st_AUE <- read.xlsx('../Data/BB Statistik/ST-2025_0104_2024_1531 Asylbewerberleistungen § 5 Empfänger Ausgaben ZTR .xlsx', sheet = 'ST AuE 2010-2023 ')
# HH
hh_AUE <- read.xlsx('../Data/BB Statistik/StaNord-Ergebnis für Kunden LUEK.xlsx', sheet = 'HH Ausg 2010-2023')
hh_EMPF <- read.xlsx('../Data/BB Statistik/StaNord-Ergebnis für Kunden LUEK.xlsx', sheet = 'HH Empf 2010-2023-GH')
# Schleswig Holstein
hh_AUE <- read.xlsx('../Data/BB Statistik/StaNord-Ergebnis für Kunden LUEK.xlsx', sheet = 'SH Ausg 2010-2023')
# Schleswig Holstein
sh_AUE <- read.xlsx('../Data/BB Statistik/StaNord-Ergebnis für Kunden LUEK.xlsx', sheet = 'SH Ausg 2010-2023')
sh_EMPF <- read.xlsx('../Data/BB Statistik/StaNord-Ergebnis für Kunden LUEK.xlsx', sheet = 'SH Empf 2010-2023-GH')
# Thüringen
th_AUE <- read.xlsx('../Data/BB Statistik/TH-Empfänger von Asylbewerberleistungen nach Kreisen.xlsx', sheet = 'TH Empf 2010-2023')
th_EMPF <- read.xlsx('../Data/BB Statistik/TH-Empfänger von Asylbewerberleistungen nach Kreisen.xlsx', sheet ='TH Empf 2010-2023')
